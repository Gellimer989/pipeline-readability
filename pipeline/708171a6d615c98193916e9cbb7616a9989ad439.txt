# The current Travis default is a VM based 16.04 Xenial on GCE
# Additional builds with specific requirements for a full VM need to
# be added as additional matrix: entries later on
dist: xenial
language: c
compiler:
  - gcc
cache:
  # There is one cache per branch and compiler version.
  # characteristics of each job are used to identify the cache:
  # - OS name (currently, linux, osx, or windows)
  # - OS distribution (for Linux, xenial, trusty, or precise)
  # - macOS image name (e.g., xcode7.2)
  # - Names and values of visible environment variables set in .travis.yml or Settings panel
  timeout: 1200
  ccache: true
  pip: true
  directories:
  - $HOME/avocado/data/cache


addons:
  apt:
    sources:
      # up to ubuntu xenial, we can use the ppa name
      - sourceline: 'ppa:phulin/panda'
      # the ppa doesn't support later ubuntu releases -- specify url instead
      #- sourceline: 'deb http://ppa.launchpad.net/phulin/panda/ubuntu xenial main'
    packages:
      # Build dependencies
      - libaio-dev
      - libattr1-dev
      - libbrlapi-dev
      - libcap-dev
      - libcap-ng-dev
      - libgcc-4.8-dev
      - libgnutls-dev
      - libgtk-3-dev
      - libiscsi-dev
      - liblttng-ust-dev
      - libncurses5-dev
      - libnfs-dev
      - libnss3-dev
      - libpixman-1-dev
      - libpng12-dev
      - librados-dev
      - libsdl1.2-dev
      - libseccomp-dev
      - libspice-protocol-dev
      - libspice-server-dev
      - libssh-dev
      - liburcu-dev
      - libusb-1.0-0-dev
      - libvte-2.91-dev
      - sparse
      - uuid-dev
      # PANDA stuff
      - bison
      - flex
      - linux-libc-dev
      - libcapstone-dev
      - libdwarf-dev
      - libelf-dev
      - libprotobuf-c0-dev
      - libprotoc-dev
      - libwireshark-dev
      - libwiretap-dev
      - llvm-3.3-dev
      - clang-3.3
      - protobuf-c-compiler
      - protobuf-compiler
      - python-pip
      - python-protobuf
      - python-pycparser
      # PYPANDA stuff
      - python3
      - python3-pip
      - python3-setuptools
      - genisoimage # To make isos for run_guest
      # To build 32-bit targets for testing
      - libc6-dev-i386
      - gcc-multilib
      - nasm

# The channel name "irc.oftc.net#qemu" is encrypted against qemu/qemu
# to prevent IRC notifications from forks. This was created using:
# $ travis encrypt -r "qemu/qemu" "irc.oftc.net#qemu"
notifications:
  irc:
    channels:
      - secure: "F7GDRgjuOo5IUyRLqSkmDL7kvdU4UcH3Lm/W2db2JnDHTGCqgEdaYEYKciyCLZ57vOTsTsOgesN8iUT7hNHBd1KWKjZe9KDTZWppWRYVwAwQMzVeSOsbbU4tRoJ6Pp+3qhH1Z0eGYR9ZgKYAoTumDFgSAYRp4IscKS8jkoedOqM="
    on_success: change
    on_failure: always


env:
  global:
    - TEST_CMD="make check -j3 V=1"

git:
  # we want to do this ourselves
  submodules: false
before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update ; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install libffi gettext glib pixman ; fi
  - wget -O - http://people.linaro.org/~alex.bennee/qemu-submodule-git-seed.tar.xz | tar -xvJ
  - git submodule update --init --recursive
  - cd /opt/pyenv/plugins/python-build/../.. && git pull && cd - # Update pyenv

# PANDA
sudo: required
dist: xenial
before_install:
  #- sudo pip install pycparser
      #- git submodule update --init dtc
    - cd $(pyenv root) && git checkout master && git pull; cd -
env:
    global:
        - PANDA_TEST="no" # TEMPORARY - change back to yes when done testing pypanda
script:
    - travis_wait 60 sleep infinity &
    - pyenv install 2.7.9 || travis_terminate 1; # For core qemu
    - pyenv install 3.6.6 || travis_terminate 1; # For pypanda
    - pyenv shell 2.7.9 3.6.6 || travis_terminate 1; # Create a shell with both python2 and python3
    - sudo panda/scripts/install_ubuntu.sh || travis_terminate 1; # Build panda
    - python3 panda/pypanda/utils/create_panda_datatypes.py || travis_terminate 1;
    - cd panda/pypanda && python3 setup.py install || travis_terminate 1; cd ../..;
    - make -C panda/pypanda/tests || travis_terminate 1;
    - pip3 install capstone cffi colorama protobuf # Dependencies for pypanda tests
    - pip3 install -r panda/pypanda/tests/requirements.txt # Better approach to installing dependencies
    - cd panda/pypanda/tests; python3 multi_proc_cbs.py; cd ../../..; # XXX: can we just CD once? Need to be in the dir for
    - cd panda/pypanda/tests; python3 taint_regs.py; cd ../../..;     #      the relative path to toy to resolve
    - cd panda/pypanda/tests; python3 taint_ram.py; cd ../../..;
#before_script:
#  - ./configure ${CONFIG}
#script:
#  - make -j3 && ${TEST_CMD}
