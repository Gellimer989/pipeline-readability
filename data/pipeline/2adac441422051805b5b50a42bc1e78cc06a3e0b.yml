language: cpp

dist: trusty

sudo: required

services:
  - docker

matrix:
  include:
    - os: linux
      env: OS=ubuntu DIST=xenial
      compiler: gcc
    - os: linux
      env: OS=fedora DIST=25
      compiler: gcc
    - os: linux
      env: OS=opensuse DIST=leap
      compiler: gcc
    - os: osx
      compiler: gcc

before_install:
  - echo $TRAVIS_OS_NAME
  - mkdir -p $TRAVIS_BUILD_DIR/build/release
  - cd $TRAVIS_BUILD_DIR
  # Linux
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker build -f dockers/Dockerfile.$OS.$DIST . -t moneymanagerex:$OS.$DIST; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run -it -v $PWD/build/release:/moneymanagerex/build/release moneymanagerex:$OS.$DIST bash -c "cd moneymanagerex/build/release;cmake -DCMAKE_BUILD_TYPE=Release ../../;make package"; fi
  # MacOS
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install wxmac; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install gettext; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew link --force gettext; fi

script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd $TRAVIS_BUILD_DIR/build/release; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cmake -DCMAKE_BUILD_TYPE=Release ../../; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then make package -j4; fi

# blacklist
branches:
  except:
    - legacy

notifications: # set notification options
  email:
    recipients:
      - developers@moneymanagerex.org
    # change is when the repo status goes from pass to fail or vice versa
    on_success: change
    on_failure: always

after_success:
  - cd $TRAVIS_BUILD_DIR/build/release 
  # Renames the artifact according to their facility
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then find . -maxdepth 1 \( -name "*.deb" -or -name "*.rpm" \) | sed 's#.*/##' | awk '{print "mv {,${OS}-${DIST}-}"$1}' | sudo bash; ls -la; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then find . -maxdepth 1 -name "*.dmg" | sed 's#.*/##' | awk '{print "mv {,macos-}"$1}' | sudo bash; fi

deploy:
    provider: releases
    api_key: ${api_key}
    file_glob: true
    file: $TRAVIS_BUILD_DIR/build/release/*.{deb,rpm,dmg}
    skip_cleanup: true
    # Set deploy conditions
    on:
        # Deploy only when tag is specified
        tags: true

