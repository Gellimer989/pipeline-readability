language: c++

matrix:
  include:
    - os: linux
      compiler: clang
      env: [ CONF_OPTIONS="--enable-cplusplus" ]
    - os: linux
      compiler: gcc
      env: [ CONF_OPTIONS="--enable-cplusplus" ]
    - os: osx
      env: [ CONF_OPTIONS="--enable-cplusplus" ]
    - os: linux
      addons: { apt: { packages: [ gcc-multilib ] } }
      compiler: clang
      env: [ CFLAGS_EXTRA="-m32", CONF_OPTIONS="--enable-gc-assertions" ]
    - os: linux
      addons: { apt: { packages: [ gcc-multilib ] } }
      compiler: gcc
      env: [ CFLAGS_EXTRA="-m32", CONF_OPTIONS="--enable-gc-assertions" ]
    - os: osx
      env:
        - CFLAGS_EXTRA="-m32"
        - CONF_OPTIONS="--enable-gc-assertions --enable-cplusplus"
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D CHECKSUMS"
        - CONF_OPTIONS="--disable-threads --enable-cplusplus"
    - os: linux
      compiler: clang
      env:
        - CFLAGS_EXTRA="-D DBG_HDRS_ALL -D SHORT_DBG_HDRS"
        - CONF_OPTIONS="--enable-gc-assertions --enable-cplusplus"
    - os: osx
      env:
        - CFLAGS_EXTRA="-D DBG_HDRS_ALL -D SHORT_DBG_HDRS -D LINT2"
        - CONF_OPTIONS="--enable-gc-assertions --enable-cplusplus"
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D DEBUG_ADD_DEL_ROOTS -D DEBUG_DIRTY_BITS -D DEBUG_THREADS -D GC_LOG_TO_FILE_ALWAYS"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D ENABLE_TRACE -D EMPTY_GETENV_RESULTS -D GC_ALWAYS_MULTITHREADED -D CPPCHECK"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      compiler: clang
      env:
        - CFLAGS_EXTRA="-D GC_BUILTIN_ATOMIC -march=native -D _FORTIFY_SOURCE=2"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: osx
      env:
        - CFLAGS_EXTRA="-D GC_BUILTIN_ATOMIC -march=native -D _FORTIFY_SOURCE=2"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      addons: { apt: { packages: [ gcc-multilib ] } }
      compiler: gcc
      env: [ CFLAGS_EXTRA="-m32 -D MARK_BIT_PER_OBJ" ]
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D POINTER_MASK=~0xf"
        - CONF_OPTIONS="--enable-gc-assertions --enable-cplusplus"
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D PROC_VDB -D GC_NO_SYS_FAULT_H -D NO_INCREMENTAL"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      compiler: gcc
      env:
        - CFLAGS_EXTRA="-D SMALL_CONFIG -D NO_GETENV"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      compiler: gcc
      dist: trusty
      env:
        - CFLAGS_EXTRA="-std=c11 -D GC_NO_SIGSETJMP"
        - CONF_OPTIONS="--disable-threads --enable-gc-assertions --enable-cplusplus"
    - os: linux
      addons: { apt: { packages: [ lcov ] } }
      compiler: gcc
      env:
        - CONF_OPTIONS="--enable-gcov --enable-munmap --enable-single-obj-compilation --enable-cplusplus --disable-shared --enable-gc-assertions"
        - REPORT_COVERAGE=true
    - os: linux
      compiler: gcc
      env: [ CONF_OPTIONS="--enable-gc-debug --enable-cplusplus" ]
    - os: linux
      compiler: gcc
      env: [ CONF_OPTIONS="--disable-gc-debug --enable-cplusplus" ]
    - os: linux
      compiler: clang
      env: [ CONF_OPTIONS="--enable-large-config --enable-cplusplus" ]
    - os: osx
      env: [ CONF_OPTIONS="--enable-large-config --enable-cplusplus" ]
    - os: linux
      addons: { apt: { packages: [ gcc-multilib ] } }
      compiler: gcc
      env: [ CONF_OPTIONS="--enable-large-config", CFLAGS_EXTRA="-m32" ]
    - os: linux
      compiler: gcc
      env:
        - CONF_OPTIONS="--enable-large-config --enable-munmap --enable-cplusplus"
        - CFLAGS_EXTRA="-D LINT2"
    - os: linux
      addons: { apt: { packages: [ gcc-multilib ] } }
      compiler: clang
      env:
        - CONF_OPTIONS="--enable-redirect-malloc --disable-threads"
        - CFLAGS_EXTRA="-m32"
    - os: osx
      env:
        - CONF_OPTIONS="--enable-redirect-malloc --enable-cplusplus --disable-threads"
        - CFLAGS_EXTRA="-m32"
    - os: linux
      compiler: gcc
      env:
        - CONF_OPTIONS="--enable-redirect-malloc --enable-gc-debug --enable-cplusplus --enable-gc-assertions"
    - os: linux
      compiler: clang
      env:
        - CONF_OPTIONS="--disable-static --disable-threads --enable-cplusplus"
        - CFLAGS_EXTRA="-O3 -march=native"
    - os: linux
      compiler: gcc
      env:
        - CONF_OPTIONS="--disable-static --disable-threads --enable-cplusplus"
        - CFLAGS_EXTRA="-O3 -march=native"
    - os: osx
      env:
        - CONF_OPTIONS="--disable-static --disable-threads --enable-cplusplus"
        - CFLAGS_EXTRA="-O3 -march=native"
    - os: osx
      env: [ CSA_CHECK=true, CFLAGS_EXTRA="-m32" ]
    - os: linux
      addons:
        apt:
          packages: [ clang-4.0 ]
          sources: [ llvm-toolchain-trusty-4.0 ]
      compiler: clang-4.0
      dist: trusty
      language: c
      env:
        - CSA_CHECK=true
        - CFLAGS_EXTRA="-D ALL_INTERIOR_POINTERS -D CHECKSUMS -D DBG_HDRS_ALL -D DEBUG_THREADS -D ENABLE_TRACE -D GC_ALWAYS_MULTITHREADED -D GC_ASSERTIONS -D GC_ATOMIC_UNCOLLECTABLE -D GC_ENABLE_SUSPEND_THREAD -D GC_GCJ_SUPPORT -D GC_PRINT_BACK_HEIGHT -D GC_THREADS -D HANDLE_FORK -D JAVA_FINALIZATION -D KEEP_BACK_PTRS -D MAKE_BACK_GRAPH -D PARALLEL_MARK -D PRINT_BLACK_LIST -D THREAD_LOCAL_ALLOC -D USE_MMAP -D USE_MUNMAP"
    - os: linux
      env:
        - CPPCHECK_ENABLE="-j16 --enable=information,performance,portability,style,warning"
      sudo: required
    - os: linux
      env: [ CPPCHECK_ENABLE="--enable=unusedFunction" ]
      sudo: required
    - os: linux
      compiler: clang
      env:
        - MAKEFILE_NAME=Makefile.direct
        - MAKEFILE_EXTRA_TARGETS="check-cpp cord/de"
    - os: linux
      compiler: gcc
      env:
        - MAKEFILE_NAME=Makefile.direct
        - MAKEFILE_EXTRA_TARGETS="check-cpp cord/de"
    - os: osx
      env:
        - MAKEFILE_NAME=Makefile.direct
        - MAKEFILE_EXTRA_TARGETS="check-cpp cord/de"
    - os: linux
      addons: { apt: { packages: [ musl-tools ] } }
      compiler: musl-gcc
      dist: trusty
      language: c
      env:
        - CONF_OPTIONS="--disable-parallel-mark --enable-gc-assertions"
    - os: linux
      addons:
        apt:
          packages: [ clang-4.0 ]
          sources: [ llvm-toolchain-trusty-4.0 ]
      compiler: clang-4.0
      dist: trusty
      language: c
      env:
        - CXX=clang++-4.0
        - CFLAGS_EXTRA="-fsanitize=address -fno-common -fno-omit-frame-pointer"
        - CONF_OPTIONS="--enable-cplusplus"
    - os: linux
      addons:
        apt:
          packages: [ clang-4.0 ]
          sources: [ llvm-toolchain-trusty-4.0 ]
      compiler: clang-4.0
      dist: trusty
      language: c
      env:
        - CFLAGS_EXTRA="-fsanitize=memory -fno-omit-frame-pointer"
        - CONF_OPTIONS="--enable-munmap"
        - MSAN_OR_UBSAN=true
      sudo: required
    - os: linux
      compiler: clang
      env:
        - CFLAGS_EXTRA="-fsanitize=undefined -fno-common -fno-omit-frame-pointer"
        - MSAN_OR_UBSAN=true
        - CONF_OPTIONS="--enable-cplusplus --enable-munmap"
    - os: linux
      addons:
        apt:
          packages: [ clang-4.0 ]
          sources: [ llvm-toolchain-trusty-4.0 ]
      compiler: clang-4.0
      dist: trusty
      language: c
      env:
        - CXX=clang++-4.0
        - CFLAGS_EXTRA="-O3 -march=native"
        - CONF_OPTIONS="--enable-cplusplus --enable-single-obj-compilation"
    - os: linux
      addons:
        apt:
          packages: [ clang-4.0, gcc-multilib ]
          sources: [ llvm-toolchain-trusty-4.0 ]
      compiler: clang-4.0
      dist: trusty
      language: c
      env:
        - CFLAGS_EXTRA="-m32 -D _FORTIFY_SOURCE=2"
        - CONF_OPTIONS="--enable-munmap --enable-gc-assertions"
    - os: linux
      addons:
        apt:
          packages: [ gcc-5, g++-5 ]
          sources: [ ubuntu-toolchain-r-test ]
      compiler: gcc-5
      dist: trusty
      language: c
      env:
        - CXX=g++-5
        - CONF_OPTIONS="--enable-munmap --enable-cplusplus --enable-gc-assertions"
    - os: linux
      addons:
        apt:
          packages: [ gcc-5, gcc-5-multilib, gcc-multilib ]
          sources: [ ubuntu-toolchain-r-test ]
      compiler: gcc-5
      dist: trusty
      language: c
      env:
        - CFLAGS_EXTRA="-m32 -O3"
        - CONF_OPTIONS="--disable-shared --enable-single-obj-compilation"
    - os: linux
      addons:
        apt:
          packages: [ gcc-5, gcc-5-multilib, gcc-multilib ]
          sources: [ ubuntu-toolchain-r-test ]
      compiler: gcc-5
      dist: trusty
      language: c
      env:
        - CFLAGS_EXTRA="-mx32 -march=native -D _FORTIFY_SOURCE=2"
        - CONF_OPTIONS="--enable-munmap --enable-large-config --enable-gc-assertions"

before_install:
  - if [[ "$CPPCHECK_ENABLE" != "" ]]; then
      git clone --depth=3 https://github.com/danmar/cppcheck.git
            ~/cppcheck -b master;
      make --directory ~/cppcheck -j CXXFLAGS="-O3 -march=native -D NDEBUG";
    fi
  - if [[ "$MAKEFILE_NAME" == "" ]]; then
      MAKEFILE_NAME=Makefile;
    fi

install:
  - git clone --depth=50 https://github.com/ivmai/libatomic_ops.git
  - ./autogen.sh
  - if [[ "$REPORT_COVERAGE" == true ]]; then
      gem install coveralls-lcov;
    fi

script:
  - if [[ "$CSA_CHECK" != true && "$CPPCHECK_ENABLE" == ""
          && "$MAKEFILE_NAME" != "Makefile.direct" ]]; then
      ./configure $CONF_OPTIONS --enable-werror &&
      cat include/config.h;
    fi
  - if [[ "$CSA_CHECK" != true && "$CPPCHECK_ENABLE" == "" ]]; then
      make -j -f $MAKEFILE_NAME check $MAKEFILE_EXTRA_TARGETS
           CFLAGS_EXTRA="$CFLAGS_EXTRA";
    fi
  - if [ -f gctest.log ]; then cat gctest.log; fi
  - if [[ "$CSA_CHECK" == true ]]; then
      ${CC} --analyze -Xanalyzer -analyzer-output=text
            -Werror -I include -I libatomic_ops/src $CFLAGS_EXTRA
            *.c *.cc cord/*.c cord/tests/cordtest.c cord/tests/de.c extra/gc.c
            extra/msvc_dbg.c tests/*.c tests/*.cc tools/*.c;
    fi
  - if [[ "$CPPCHECK_ENABLE" != "" ]]; then
      ~/cppcheck/cppcheck -f --error-exitcode=2 -U long -D CPPCHECK
                -I include -I libatomic_ops/src $CPPCHECK_ENABLE
                *.cc cord/*.c cord/tests/*.c extra/*.c extra/*.cpp
                tests/*.c tests/*.cc tools/*.c;
    fi
  - if [[ "$MSAN_OR_UBSAN" == true ]]; then
      UBSAN_OPTIONS="halt_on_error=1" make check-without-test-driver;
    fi

after_success:
  - if [[ "$REPORT_COVERAGE" == true ]]; then
      lcov --capture --base-directory . --directory . --output-file coverage.info;
      lcov --remove coverage.info '/usr/*' 'cord/tests/*' 'libatomic_ops/*' 'tests/*' --output-file coverage.info;
      lcov --list coverage.info;
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info;
    fi
