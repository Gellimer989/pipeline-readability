sudo: false

os:
- linux
- osx

compiler:
  - clang
  - gcc

matrix:
  fast_finish: true
  allow_failures:
  - os: osx
  exclude:
  - os: osx
    compiler: gcc

env:
  global:
  - UPLOAD_DIR=libxsmm
  matrix:
  - LIBXSMM_JIT=0
  - DBG=1

language: cpp

addons:
  apt:
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - sshpass

before_install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew update; fi

install:
  - pip install --user codecov
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      cd /tmp && curl -O -L http://downloads.sourceforge.net/project/sshpass/sshpass/1.05/sshpass-1.05.tar.gz &&
        tar xvzf sshpass-1.05.tar.gz && cd sshpass-1.05 && ./configure && make && sudo make install &&
        cd ${TRAVIS_BUILD_DIR};
    fi

after_success:
  - eval ${CODECOV}

before_script:
  - source .env

script:
  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    make -e PREFIX=${UPLOAD_DIR} TRACE=1 ECFLAGS="-DREAL_TYPE=float ${ECFLAGS}" STATIC=0 install-dev tests test-wrap &&
    if [ "${CXX}" != "g++" ] && [ "${TRAVIS_OS_NAME}" != "osx" ]; then
      env LIBXSMM_TRACE=1 ${TRAVIS_BUILD_DIR}/tests/threadsafety 2> threadsafety-trace-${COVID}.txt; 
    fi &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    make -e PREFIX=${UPLOAD_DIR} TRACE=1 ECFLAGS="-DREAL_TYPE=double ${ECFLAGS}" install-dev tests test-wrap &&
    if [ "${CXX}" != "g++" ] && [ "${TRAVIS_OS_NAME}" != "osx" ]; then
      env LIBXSMM_TRACE=1 ${TRAVIS_BUILD_DIR}/tests/threadsafety 2> threadsafety-trace-${COVID}.txt; 
    fi &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-rm PREFIX=${UPLOAD_DIR} ECFLAGS="-DLIBXSMM_REGSIZE=32 ${ECFLAGS}" STATIC=0 install-dev tests test-cp2k &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-rm PREFIX=${UPLOAD_DIR} PREFETCH=1 install-dev tests test-cp2k &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-cm PREFIX=${UPLOAD_DIR} STATIC=0 install-dev tests test-cp2k test-smm &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-cm PREFIX=${UPLOAD_DIR} ECFLAGS="-DLIBXSMM_HASH_BASIC ${ECFLAGS}" install-dev tests test-cp2k test-smm &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-cm PREFIX=${UPLOAD_DIR} SSE=0 AVX=0 install-dev tests test-smm &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

  - source .codecov $(if [ "${CXX}" = "g++" ]; then echo 1; else echo 0; fi) &&
    ./make.sh -ci-nek PREFIX=${UPLOAD_DIR} install-dev test-nek &&
    eval ${RUNXCOV} && eval ${UPLOAD} && make -e clean

