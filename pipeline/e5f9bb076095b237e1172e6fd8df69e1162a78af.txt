language: python
env:
  global:
    - DOCKER_ARGS='-i -a stdout -a stderr -e TF_VAR_build_number=${TRAVIS_JOB_NUMBER/./-}'
    - DOCKER_IMAGE=sehqlr/mantl:testing
  matrix:
    - TERRAFORM_FILE=testing/aws MANTL_PROVIDER=aws DOCKER_SECRETS='-e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID'
    - TERRAFORM_FILE=testing/do MANTL_PROVIDER=do DOCKER_SECRETS='-e DIGITALOCEAN_TOKEN=$DIGITALOCEAN_TOKEN'
    - TERRAFORM_FILE=testing/gce MANTL_PROVIDER=gce DOCKER_SECRETS='-e GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS'

install: "pip install -r requirements.txt"

before_script: 
  - mv $TERRAFORM_FILE $TERRAFORM_FILE.tf
  - docker pull sehqlr/mantl:testing
  - docker run $DOCKER_ARGS -v $(pwd)/testing:/local -v $(pwd):/mantl $DOCKER_IMAGE "ls /local"
  - docker run $DOCKER_ARGS -v $(pwd)/testing:/local -v $(pwd):/mantl $DOCKER_IMAGE "python2 docker_setup.py"

script: 
  - python2 testing/test-health-checks.py
  - docker run $DOCKER_ARGS -v $(pwd)/testing:/local -v $(pwd):/mantl $DOCKER_SECRETS $DOCKER_IMAGE "python2 testing/build-cluster.py"

after_script:
  # Just once doesn't always work
  - terraform destroy --force || true
  - terraform destroy --force

after_success: echo "slack notification here"

sudo: required

services:
  - docker

addons:
  apt:
    packages:
      - unzip

notifications:
  slack:
    secure: eX3VgtKQ48rzKGdXpIZZVYINffI2wbqhqoJFUxHO1Zku6tXzbt0R+r3NVHo37wBID63bkXjYqjZuv+JRUtvf/XO51+QkTqCCZ6iC3lr6IEqRpzxXsmNYf+QPhuN2kvVTSyycHFXdwQLL7sCniFSmEcLdu6xMpobI4PUwi2OvHj4=
